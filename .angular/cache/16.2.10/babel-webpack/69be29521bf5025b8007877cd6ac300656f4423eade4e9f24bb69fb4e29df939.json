{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/task.service\";\nimport * as i3 from \"@angular/forms\";\nexport class CreateTaskComponent {\n  constructor(router, taskService) {\n    this.router = router;\n    this.taskService = taskService;\n    this.taskForm = new FormGroup({\n      title: new FormControl(\"\", [Validators.required]),\n      limitDate: new FormControl(\"\", [Validators.required]),\n      category: new FormControl(\"\", [Validators.required]),\n      color: new FormControl(\"\"),\n      description: new FormControl(\"\")\n    });\n  }\n  onSubmit(task) {\n    this.taskService.add(task);\n    this.router.navigate([\"/task-list\"]);\n  }\n  static #_ = this.ɵfac = function CreateTaskComponent_Factory(t) {\n    return new (t || CreateTaskComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.TaskService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateTaskComponent,\n    selectors: [[\"app-create-task\"]],\n    decls: 36,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\"], [\"for\", \"dateLimit\"], [\"type\", \"date\", \"id\", \"dateLimit\", \"formControlName\", \"limitDate\"], [\"for\", \"category\"], [\"type\", \"text\", \"id\", \"category\", \"formControlName\", \"category\"], [\"for\", \"colors\"], [\"id\", \"colors\", \"name\", \"colors\", \"formControlName\", \"color\"], [\"value\", \"verde\"], [\"value\", \"vermelho\"], [\"value\", \"azul\"], [\"value\", \"roxo\"], [\"value\", \"amarelo\"], [\"for\", \"description\"], [\"type\", \"text\", \"formControlName\", \"description\"], [3, \"disabled\"]],\n    template: function CreateTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateTaskComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit(ctx.taskForm.value);\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"T\\u00EDtulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Data limite:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Categoria\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Cor da tarefa:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 8)(17, \"option\", 9);\n        i0.ɵɵtext(18, \"Verde\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 10);\n        i0.ɵɵtext(20, \"Vermelho\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 11);\n        i0.ɵɵtext(22, \"Azul\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"option\", 12);\n        i0.ɵɵtext(24, \"Roxo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"option\", 13);\n        i0.ɵɵtext(26, \"Amarelo\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"div\")(28, \"label\", 14);\n        i0.ɵɵtext(29, \"Descri\\u00E7\\u00E3o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\")(32, \"button\");\n        i0.ɵɵtext(33, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 16);\n        i0.ɵɵtext(35, \"Salvar\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n        i0.ɵɵadvance(34);\n        i0.ɵɵproperty(\"disabled\", !ctx.taskForm.valid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","CreateTaskComponent","constructor","router","taskService","taskForm","title","required","limitDate","category","color","description","onSubmit","task","add","navigate","_","i0","ɵɵdirectiveInject","i1","Router","i2","TaskService","_2","selectors","decls","vars","consts","template","CreateTaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CreateTaskComponent_Template_form_ngSubmit_0_listener","value","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","valid"],"sources":["C:\\Ada-SantanderCoders-2023 exercicios\\equipe4-angular-sc23\\src\\app\\module\\tasks\\components\\create-task\\create-task.component.ts","C:\\Ada-SantanderCoders-2023 exercicios\\equipe4-angular-sc23\\src\\app\\module\\tasks\\components\\create-task\\create-task.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { TaskModel } from \"../../models/task.model\";\r\nimport { TaskService } from \"../../services/task.service\";\r\n\r\n@Component({\r\n  selector: \"app-create-task\",\r\n  templateUrl: \"./create-task.component.html\",\r\n  styleUrls: [\"./create-task.component.css\"],\r\n})\r\nexport class CreateTaskComponent {\r\n  taskForm: FormGroup;\r\n  constructor(private router: Router, private taskService: TaskService) {\r\n    this.taskForm = new FormGroup({\r\n      title: new FormControl(\"\", [Validators.required]),\r\n      limitDate: new FormControl(\"\", [Validators.required]),\r\n      category: new FormControl(\"\", [Validators.required]),\r\n      color: new FormControl(\"\"),\r\n      description: new FormControl(\"\"),\r\n    });\r\n  }\r\n\r\n  onSubmit(task: TaskModel) {\r\n    this.taskService.add(task);\r\n    this.router.navigate([\"/task-list\"]);\r\n  }\r\n}\r\n","<form [formGroup]=\"taskForm\" (ngSubmit)=\"onSubmit(taskForm.value)\">\r\n    <div>\r\n        <label for=\"title\">Título</label>\r\n        <input type=\"text\" id=\"title\" formControlName = \"title\">\r\n    </div>\r\n    <div>\r\n        <label for=\"dateLimit\">Data limite:</label>\r\n        <input type=\"date\" id=\"dateLimit\" formControlName=\"limitDate\">\r\n    </div>\r\n    <div>\r\n        <label for=\"category\">Categoria</label>\r\n        <input type=\"text\" id=\"category\" formControlName = \"category\">\r\n    </div>\r\n    <div>\r\n        <label for=\"colors\">Cor da tarefa:</label>\r\n        <select id=\"colors\" name=\"colors\" formControlName = \"color\">\r\n            <option value=\"verde\">Verde</option>\r\n            <option value=\"vermelho\">Vermelho</option>\r\n            <option value=\"azul\">Azul</option>\r\n            <option value=\"roxo\">Roxo</option>\r\n            <option value=\"amarelo\">Amarelo</option>\r\n        </select>\r\n    </div>\r\n    <div>\r\n        <label for=\"description\">Descrição:</label>\r\n        <input type=\"text\" formControlName = \"description\">\r\n    </div>\r\n\r\n    <div>\r\n        <button>Cancelar</button>\r\n        <button [disabled]=\"!taskForm.valid\">Salvar</button>\r\n    </div>\r\n</form>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}