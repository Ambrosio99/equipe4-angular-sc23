{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class EditTaskComponent {\n  constructor(taskService, router, route) {\n    this.taskService = taskService;\n    this.router = router;\n    this.route = route;\n    this.index = 0;\n    this.editedTask = {\n      title: \" \",\n      category: \"\",\n      done: false,\n      description: \"\",\n      color: \"\"\n    };\n    this.editForm = new FormGroup({\n      title: new FormControl(this.editedTask.title, [Validators.required]),\n      limitDate: new FormControl(this.editedTask.limitDate, [Validators.required]),\n      category: new FormControl(this.editedTask.category, [Validators.required]),\n      color: new FormControl(this.editedTask.color || \"\"),\n      description: new FormControl(this.editedTask.description || \"\")\n    });\n  }\n  ngOnInit() {\n    this.index = this.taskService.indexTask;\n    this.editedTask = this.taskService.getTask(this.index);\n  }\n  cancelTaks() {\n    this.router.navigate([\"/task-list\"]);\n  }\n  static #_ = this.ɵfac = function EditTaskComponent_Factory(t) {\n    return new (t || EditTaskComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditTaskComponent,\n    selectors: [[\"app-edit-task\"]],\n    decls: 46,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", 1, \"form-control\"], [\"for\", \"dateLimit\"], [\"type\", \"date\", \"id\", \"dateLimit\", \"formControlName\", \"limitDate\", 1, \"form-control\"], [\"for\", \"category\"], [\"type\", \"text\", \"id\", \"category\", \"formControlName\", \"category\", 1, \"form-control\"], [\"for\", \"colors\", 1, \"flex-colors\"], [2, \"background-color\", \"#1cd65b\"], [2, \"background-color\", \"#e13434\"], [2, \"background-color\", \"#3479e1\"], [2, \"background-color\", \"#996cf9\"], [2, \"background-color\", \"#f4dd0c\"], [\"id\", \"colors\", \"name\", \"colors\", \"formControlName\", \"color\", 1, \"form-control\"], [\"value\", \"verde\"], [\"value\", \"vermelho\"], [\"value\", \"azul\"], [\"value\", \"roxo\"], [\"value\", \"amarelo\"], [\"for\", \"description\"], [\"type\", \"text\", \"formControlName\", \"description\", 1, \"form-control\"], [1, \"btn-form\", \"cancel-bg\", 3, \"click\"], [1, \"btn-form\", \"save-bg\", 3, \"disabled\"]],\n    template: function EditTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\")(1, \"h1\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"main\")(4, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function EditTaskComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit(ctx.taskForm.value);\n        });\n        i0.ɵɵelementStart(5, \"div\")(6, \"label\", 1);\n        i0.ɵɵtext(7, \"T\\u00EDtulo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\", 3);\n        i0.ɵɵtext(11, \"Data limite:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 5);\n        i0.ɵɵtext(15, \"Categoria:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\")(18, \"label\", 7);\n        i0.ɵɵtext(19, \"Cor da tarefa: \");\n        i0.ɵɵelementStart(20, \"ul\");\n        i0.ɵɵelement(21, \"li\", 8)(22, \"li\", 9)(23, \"li\", 10)(24, \"li\", 11)(25, \"li\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"select\", 13)(27, \"option\", 14);\n        i0.ɵɵtext(28, \"Verde\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"option\", 15);\n        i0.ɵɵtext(30, \"Vermelho\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 16);\n        i0.ɵɵtext(32, \"Azul\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"option\", 17);\n        i0.ɵɵtext(34, \"Roxo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"option\", 18);\n        i0.ɵɵtext(36, \"Amarelo\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"div\")(38, \"label\", 19);\n        i0.ɵɵtext(39, \"Descri\\u00E7\\u00E3o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\")(42, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function EditTaskComponent_Template_button_click_42_listener() {\n          return ctx.cancelTaks();\n        });\n        i0.ɵɵtext(43, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"button\", 22);\n        i0.ɵɵtext(45, \"Adicionar\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Editando Tarefa \", ctx.index + 1, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n        i0.ɵɵadvance(40);\n        i0.ɵɵproperty(\"disabled\", !ctx.editForm.valid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","EditTaskComponent","constructor","taskService","router","route","index","editedTask","title","category","done","description","color","editForm","required","limitDate","ngOnInit","indexTask","getTask","cancelTaks","navigate","_","i0","ɵɵdirectiveInject","i1","TaskService","i2","Router","ActivatedRoute","_2","selectors","decls","vars","consts","template","EditTaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditTaskComponent_Template_form_ngSubmit_4_listener","onSubmit","taskForm","value","ɵɵelement","EditTaskComponent_Template_button_click_42_listener","ɵɵadvance","ɵɵtextInterpolate1","ɵɵproperty","valid"],"sources":["C:\\Users\\Haru_\\OneDrive\\Área de Trabalho\\Workspace\\Projeto final angular\\equipe4-angular-sc23\\src\\app\\module\\tasks\\components\\edit-task\\edit-task.component.ts","C:\\Users\\Haru_\\OneDrive\\Área de Trabalho\\Workspace\\Projeto final angular\\equipe4-angular-sc23\\src\\app\\module\\tasks\\components\\edit-task\\edit-task.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { TaskService } from \"../../services/task.service\";\nimport { TaskModel } from \"../../models/task.model\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-edit-task\",\n  templateUrl: \"./edit-task.component.html\",\n  styleUrls: [\"./edit-task.component.css\"],\n})\nexport class EditTaskComponent implements OnInit {\n  editForm: FormGroup;\n  public index: number = 0;\n  public editedTask: TaskModel = { title: \" \", category: \"\", done: false, description: \"\", color: \"\" };\n\n  constructor(private taskService: TaskService, private router: Router, private route: ActivatedRoute) {\n    this.editForm = new FormGroup({\n      title: new FormControl(this.editedTask.title, [Validators.required]),\n      limitDate: new FormControl(this.editedTask.limitDate, [Validators.required]),\n      category: new FormControl(this.editedTask.category, [Validators.required]),\n      color: new FormControl(this.editedTask.color || \"\"),\n      description: new FormControl(this.editedTask.description || \"\"),\n    });\n  }\n\n  ngOnInit(): void {\n    this.index = this.taskService.indexTask;\n    this.editedTask = this.taskService.getTask(this.index);\n  }\n\n  cancelTaks() {\n    this.router.navigate([\"/task-list\"]);\n  }\n}\n","<header>\n  <h1>Editando Tarefa {{index + 1}}</h1>\n</header>\n\n<main>\n  <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit(taskForm.value)\">\n    <div>\n      <label for=\"title\">Título:</label>\n      <input type=\"text\" id=\"title\" class=\"form-control\" formControlName=\"title\">\n    </div>\n    <div>\n      <label for=\"dateLimit\">Data limite:</label>\n      <input type=\"date\" id=\"dateLimit\" class=\"form-control\" formControlName=\"limitDate\">\n    </div>\n    <div>\n      <label for=\"category\">Categoria:</label>\n      <input type=\"text\" id=\"category\" class=\"form-control\" formControlName=\"category\">\n    </div>\n    <div>\n      <label for=\"colors\" class=\"flex-colors\">Cor da tarefa:\n        <ul>\n          <li style=\"background-color: #1cd65b;\"></li>\n          <li style=\"background-color: #e13434;\"></li>\n          <li style=\"background-color: #3479e1;\"></li>\n          <li style=\"background-color: #996cf9;\"></li>\n          <li style=\"background-color: #f4dd0c;\"></li>\n        </ul>\n      </label>\n      <select id=\"colors\" name=\"colors\" formControlName=\"color\" class=\"form-control\">\n        <option value=\"verde\">Verde</option>\n        <option value=\"vermelho\">Vermelho</option>\n        <option value=\"azul\">Azul</option>\n        <option value=\"roxo\">Roxo</option>\n        <option value=\"amarelo\">Amarelo</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"description\">Descrição:</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"description\">\n    </div>\n\n    <div>\n      <button class=\"btn-form cancel-bg\" (click)=\"cancelTaks()\">Cancelar</button>\n      <button [disabled]=\"!editForm.valid\" class=\"btn-form save-bg\">Adicionar</button>\n    </div>\n  </form>\n</main>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}