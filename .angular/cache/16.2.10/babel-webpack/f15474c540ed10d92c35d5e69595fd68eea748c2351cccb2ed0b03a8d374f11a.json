{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.buildForm();\n  }\n  buildForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required])\n    });\n  }\n  login() {}\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"container\", \"login-form\", 3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Seu email\", \"required\", \"\", 1, \"form-control\"], [4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵtemplate(6, LoginComponent_div_6_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched)));\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","LoginComponent","constructor","loginService","router","ngOnInit","buildForm","loginForm","email","required","password","login","_","ɵɵdirectiveInject","i1","LoginService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtext","ɵɵtemplate","LoginComponent_div_6_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","invalid","dirty","touched"],"sources":["C:\\Users\\giova\\Documents\\Angular-II-Projeto\\equipe4-angular-sc23\\src\\app\\core\\auth\\components\\login\\login.component.ts","C:\\Users\\giova\\Documents\\Angular-II-Projeto\\equipe4-angular-sc23\\src\\app\\core\\auth\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm!: FormGroup;\n\n  constructor(private loginService: LoginService, private router: Router){}\n\n  ngOnInit(): void {\n      this.buildForm();\n  }\n\n  public buildForm(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  public login(): void{\n\n  }\n}\n","<div class=\"container\">\n    <form class=\"container login-form\" [formGroup]=\"loginForm\">\n        <div class=\"form-group\">\n            <label for=\"email\">Email:</label>\n            <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\"  placeholder=\"Seu email\" required>\n            <div *ngIf=\"loginForm.get('email')?.invalid && (loginForm.get('email')?.dirty || loginForm.get('email')?.touched)\">\n                <div class=\"text-danger\"></div>\n            </div>\n        </div>\n    </form>\n</div>"],"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICIvDC,EAAA,CAAAC,cAAA,UAAmH;IAC/GD,EAAA,CAAAE,SAAA,aAA+B;IACnCF,EAAA,CAAAG,YAAA,EAAM;;;ADGlB,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;EAAU;EAExEC,QAAQA,CAAA;IACJ,IAAI,CAACC,SAAS,EAAE;EACpB;EAEOA,SAASA,CAAA;IACd,IAAI,CAACC,SAAS,GAAG,IAAIb,SAAS,CAAC;MAC7Bc,KAAK,EAAE,IAAIb,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACY,KAAK,CAAC,CAAC;MACrEE,QAAQ,EAAE,IAAIf,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACa,QAAQ,CAAC;KACtD,CAAC;EACJ;EAEOE,KAAKA,CAAA,GAEZ;EAAC,QAAAC,CAAA,G;qBAlBUX,cAAc,EAAAJ,EAAA,CAAAgB,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAlB,EAAA,CAAAgB,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdjB,cAAc;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3B5B,EAAA,CAAAC,cAAA,aAAuB;QAGQD,EAAA,CAAA8B,MAAA,aAAM;QAAA9B,EAAA,CAAAG,YAAA,EAAQ;QACjCH,EAAA,CAAAE,SAAA,eAA6G;QAC7GF,EAAA,CAAA+B,UAAA,IAAAC,6BAAA,iBAEM;QACVhC,EAAA,CAAAG,YAAA,EAAM;;;;QAPyBH,EAAA,CAAAiC,SAAA,GAAuB;QAAvBjC,EAAA,CAAAkC,UAAA,cAAAL,GAAA,CAAAnB,SAAA,CAAuB;QAI5CV,EAAA,CAAAiC,SAAA,GAA2G;QAA3GjC,EAAA,CAAAkC,UAAA,WAAAC,OAAA,GAAAN,GAAA,CAAAnB,SAAA,CAAA0B,GAAA,4BAAAD,OAAA,CAAAE,OAAA,QAAAF,OAAA,GAAAN,GAAA,CAAAnB,SAAA,CAAA0B,GAAA,4BAAAD,OAAA,CAAAG,KAAA,OAAAH,OAAA,GAAAN,GAAA,CAAAnB,SAAA,CAAA0B,GAAA,4BAAAD,OAAA,CAAAI,OAAA,GAA2G"},"metadata":{},"sourceType":"module","externalDependencies":[]}