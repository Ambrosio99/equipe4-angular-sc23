{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class RequestInterceptor {\n  constructor(router) {\n    this.router = router;\n  }\n  intercept(request, next) {\n    if (request.url.includes(\"/login\")) {\n      return next.handle(request);\n    }\n    const token = localStorage.getItem(\"TOKEN\");\n    // if (!token) {\n    //   this.router.navigate([\"/login\"]);\n    // }\n    const modifiedRequest = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return next.handle(modifiedRequest);\n  }\n  static #_ = this.ɵfac = function RequestInterceptor_Factory(t) {\n    return new (t || RequestInterceptor)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequestInterceptor,\n    factory: RequestInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["RequestInterceptor","constructor","router","intercept","request","next","url","includes","handle","token","localStorage","getItem","modifiedRequest","clone","setHeaders","Authorization","_","i0","ɵɵinject","i1","Router","_2","factory","ɵfac"],"sources":["D:\\Rayssa Mendonça\\Estudo\\Programação\\Cursos\\Santander Coders 2023\\Curso Santander Coders\\Framework de Front End II (Angular)\\equipe4-angular-sc23\\src\\app\\core\\interceptors\\request.interceptor.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  constructor(private router: Router) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    if (request.url.includes(\"/login\")) {\n      return next.handle(request);\n    }\n\n    const token = localStorage.getItem(\"TOKEN\");\n\n    // if (!token) {\n    //   this.router.navigate([\"/login\"]);\n    // }\n\n    const modifiedRequest = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    return next.handle(modifiedRequest);\n  }\n}\n"],"mappings":";;AAWA,OAAM,MAAOA,kBAAkB;EAC7BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErCC,SAASA,CACPC,OAA6B,EAC7BC,IAAiB;IAEjB,IAAID,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAClC,OAAOF,IAAI,CAACG,MAAM,CAACJ,OAAO,CAAC;;IAG7B,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C;IACA;IACA;IAEA,MAAMC,eAAe,GAAGR,OAAO,CAACS,KAAK,CAAC;MACpCC,UAAU,EAAE;QACVC,aAAa,EAAE,UAAUN,KAAK;;KAEjC,CAAC;IAEF,OAAOJ,IAAI,CAACG,MAAM,CAACI,eAAe,CAAC;EACrC;EAAC,QAAAI,CAAA,G;qBAxBUhB,kBAAkB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBrB,kBAAkB;IAAAsB,OAAA,EAAlBtB,kBAAkB,CAAAuB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}