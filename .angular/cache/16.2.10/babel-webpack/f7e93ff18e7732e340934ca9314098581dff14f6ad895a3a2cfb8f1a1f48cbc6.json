{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.buildForm();\n  }\n  buildForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required])\n    });\n  }\n  login() {}\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","FormGroup","FormControl","Validators","LoginComponent","constructor","loginService","router","ngOnInit","buildForm","loginForm","email","required","password","login","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Ada-SantanderCoders-2023 exercicios\\equipe4-angular-sc23\\src\\app\\core\\auth\\components\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { LoginService } from '../../services/login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public loginForm!: FormGroup;\r\n\r\n  constructor(private loginService: LoginService, private router: Router){}\r\n\r\n  ngOnInit(): void {\r\n      this.buildForm();\r\n  }\r\n\r\n  public buildForm(): void {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      password: new FormControl(null, [Validators.required]),\r\n    });\r\n  }\r\n\r\n  public login(): void{\r\n\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAS5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;EAAU;EAExEC,QAAQA,CAAA;IACJ,IAAI,CAACC,SAAS,EAAE;EACpB;EAEOA,SAASA,CAAA;IACd,IAAI,CAACC,SAAS,GAAG,IAAIT,SAAS,CAAC;MAC7BU,KAAK,EAAE,IAAIT,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACrEE,QAAQ,EAAE,IAAIX,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACS,QAAQ,CAAC;KACtD,CAAC;EACJ;EAEOE,KAAKA,CAAA,GAEZ;CACD;AAnBYV,cAAc,GAAAW,UAAA,EAL1Bf,SAAS,CAAC;EACTgB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWd,cAAc,CAmB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}