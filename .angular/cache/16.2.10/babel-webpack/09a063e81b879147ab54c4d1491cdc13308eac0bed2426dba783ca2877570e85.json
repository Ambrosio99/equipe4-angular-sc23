{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.tasks = [];\n    this.indexTask = -1;\n  }\n  getTasks() {\n    return this.tasks;\n  }\n  getByTitle(title) {\n    return this.tasks.find(task => task.title === title);\n  }\n  update(task) {\n    let searchTask = this.getByTitle(task.title);\n    if (searchTask) {\n      searchTask.title = task.title;\n      searchTask.limitDate = task.limitDate;\n      searchTask.description = task.description;\n      searchTask.color = task.color;\n      searchTask.category = task.category;\n    }\n  }\n  add(task) {\n    this.tasks.push(task);\n  }\n  delete(title) {\n    const i = this.tasks.findIndex(task => task.title === title);\n    if (i > -1) {\n      this.tasks.splice(i, 1);\n    }\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["TaskService","constructor","tasks","indexTask","getTasks","getByTitle","title","find","task","update","searchTask","limitDate","description","color","category","add","push","delete","i","findIndex","splice","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Haru_\\OneDrive\\Área de Trabalho\\Workspace\\Projeto final angular\\equipe4-angular-sc23\\src\\app\\module\\tasks\\services\\task.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { TaskModel } from \"../models/task.model\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TaskService {\r\n  tasks: TaskModel[] = [];\r\n  public indexTask: number = -1;\r\n\r\n  getTasks() {\r\n    return this.tasks;\r\n  }\r\n\r\n  getByTitle(title: string) {\r\n    return this.tasks.find((task) => task.title === title);\r\n  }\r\n\r\n  update(task: TaskModel) {\r\n    let searchTask = this.getByTitle(task.title);\r\n\r\n    if (searchTask) {\r\n      searchTask.title = task.title;\r\n      searchTask.limitDate = task.limitDate;\r\n      searchTask.description = task.description;\r\n      searchTask.color = task.color;\r\n      searchTask.category = task.category;\r\n    }\r\n  }\r\n\r\n  add(task: TaskModel) {\r\n    this.tasks.push(task);\r\n  }\r\n\r\n  delete(title: string) {\r\n    const i = this.tasks.findIndex((task) => task.title === title);\r\n    if (i > -1) {\r\n      this.tasks.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EAHxBC,YAAA;IAIE,KAAAC,KAAK,GAAgB,EAAE;IAChB,KAAAC,SAAS,GAAW,CAAC,CAAC;;EAE7BC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,KAAK;EACnB;EAEAG,UAAUA,CAACC,KAAa;IACtB,OAAO,IAAI,CAACJ,KAAK,CAACK,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,KAAK,KAAKA,KAAK,CAAC;EACxD;EAEAG,MAAMA,CAACD,IAAe;IACpB,IAAIE,UAAU,GAAG,IAAI,CAACL,UAAU,CAACG,IAAI,CAACF,KAAK,CAAC;IAE5C,IAAII,UAAU,EAAE;MACdA,UAAU,CAACJ,KAAK,GAAGE,IAAI,CAACF,KAAK;MAC7BI,UAAU,CAACC,SAAS,GAAGH,IAAI,CAACG,SAAS;MACrCD,UAAU,CAACE,WAAW,GAAGJ,IAAI,CAACI,WAAW;MACzCF,UAAU,CAACG,KAAK,GAAGL,IAAI,CAACK,KAAK;MAC7BH,UAAU,CAACI,QAAQ,GAAGN,IAAI,CAACM,QAAQ;;EAEvC;EAEAC,GAAGA,CAACP,IAAe;IACjB,IAAI,CAACN,KAAK,CAACc,IAAI,CAACR,IAAI,CAAC;EACvB;EAEAS,MAAMA,CAACX,KAAa;IAClB,MAAMY,CAAC,GAAG,IAAI,CAAChB,KAAK,CAACiB,SAAS,CAAEX,IAAI,IAAKA,IAAI,CAACF,KAAK,KAAKA,KAAK,CAAC;IAC9D,IAAIY,CAAC,GAAG,CAAC,CAAC,EAAE;MACV,IAAI,CAAChB,KAAK,CAACkB,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC;;EAE3B;EAAC,QAAAG,CAAA,G;qBAjCUrB,WAAW;EAAA;EAAA,QAAAsB,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}